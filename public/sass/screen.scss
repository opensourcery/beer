/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

 // *** Imports *** //
@import "compass/reset";

// *** Mixins *** //
@mixin respond_to($size, $minmax: "min") { 
//
// $size accepts the following:
// wide   : should render @media (min-width: 1600px) // wide monitors
// large  : should render @media (min-width: 760px)  // iPad and larger
// medium : should render @media (max-width: 1000px  // iPad portrait and smaller
// small  : should render @media (max-width: 769px   // iPad landscape and smaller
// mobile : should render  @media (max-width: 521px  // large Android phones and smaller
//
// This is a Sass 3.2+-only mixin, it accepts rules as arguments (@content) See http://thesassway.com/intermediate/responsive-web-design-in-sass-using-media-queries-in-sass-32
	@if $size == wide {
		@media screen and (min-width: 1600px) {
			@content;
		}
	} 
	@else if $size == large { 
		@media screen and (min-width: 760px) {
			@content;
		}
	}
	@else if $size == medium { 
		@media screen and (max-width: 1000px) {
			@content;
		}
	}
	@else if $size == small { 
		@media screen and (max-width: 769px) {
			@content;
		}
	}
	@else if $size == mobile { 
		@media screen and (max-width: 520px) {
			@content;
		}
	}
	@else { // custom loop for absolute and arbitrary minimum px values 
		@media screen and (#{$minmax}-width: $size) {
			@content;
		}
	}
}

@mixin make_font_face(
    $font-family: "SourceSansPro",
    $font-variant: "Regular",
    $font-weight: "normal",
    $font-style: "normal") {
    @font-face {
        font-family: '#{$font-family}';
        src: url('/fonts/#{$font-family}/#{$font-family}-#{$font-variant}-webfont.eot');
        src: url('/fonts/#{$font-family}/#{$font-family}-#{$font-variant}-webfont.eot?#iefix') format('embedded-opentype'),
             url('/fonts/#{$font-family}/#{$font-family}-#{$font-variant}-webfont.woff') format('woff'),
             url('/fonts/#{$font-family}/#{$font-family}-#{$font-variant}-webfont.ttf') format('truetype'),
             url('/fonts/#{$font-family}/#{$font-family}-#{$font-variant}-webfont.svg##{$font-family}') format('svg');
        font-weight: #{$font-weight};
        font-style: #{$font-style};
    }
}

@include make_font_face("SourceSansPro", "Light");
@include make_font_face("chunkfive", "Regular", "bold");

// *** Variables *** //

$font-family1: 'SourceSansPro', sans-serif;
$font-family2: 'ChunkFive', serif;
$beerbrown: hsl(40,76,51);

body {
	font: {
		family: $font-family1;
		size: 24px;
	}
	text-align: center;
	line-height: 1.2;
  @include respond_to(small) {
    font-size: 18px;
  }
}

// *** Functions *** //

// *** Base *** //
h1 {
	font: {
		family: $font-family1;
		size: 72px;
	}
  @include respond_to(small) {
    font-size: 38px;
  }
}
h2, h3 {
	font: {
		family: $font-family2;
		size: 36px;
	}
  @include respond_to(small) {
    font-size: 24px;
  }
}

// *** Things *** //
.container {
  margin: 0 4px;
  position: relative;
  height: 318px;
  width: 180px;
  background: {
    image: url('/img/pint.svg');
    size: cover;
  }
}
.keg {
	width: 50%;
	float: left;
	overflow: hidden;
	&:first-child {
		ul {
			text-align: right;
		}
		.container {
			float: right;
		}
	}
	&:last-child {
		ul {
			text-align: left;
		}
		.container {
			float: left;
		}
	}
  @include respond_to(small) {
    width: 100%;
    float: none;
    margin-bottom: 1em;
  }
}
.filled {
  position: absolute;
  bottom: 0;
  left: 0;
  background: {
    image: url('/img/beer.svg');
    repeat: no-repeat;
    size: 180px;
    position: 50% bottom;
  }
  height: 318px;
  width: 180px;
	vertical-align: bottom;
}
.amt {
  margin-top: 0.5em;
}
.chunky {
	font-family: $font-family2;
}

#footer {
  display: block;
  width: 100%;
  clear: both;
  margin: 1em 0;
  padding-top: 2em;
  font-size: 18px;
  text-align: center;
  color: rgb(80,80,80);
}
// links
a:link, a:visited {
  color: $beerbrown;
  background-color: lighten($beerbrown, 40%);
  text-decoration: none;
}
a:hover {
  color: white;
  background-color: $beerbrown;
}
